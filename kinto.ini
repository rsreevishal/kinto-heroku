[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 8888

[app:main]
use = egg:kinto

kinto.storage_backend = kinto.core.storage.postgresql
kinto.cache_backend = kinto.core.cache.postgresql
kinto.permission_backend = kinto.core.permission.postgresql

# The hmac secret below gets overridden by the environment variable
# KINTO_USERID_HMAC_SECRET which gets set on creation of the Heroku app
# See the env section of app.json
# kinto.userid_hmac_secret = Provided-by-app.json
multiauth.policies = account
multiauth.policy.account.use = kinto.plugins.accounts.AccountsPolicy
# multiauth.policies = fxa basicauth
# Allow anyone to create accounts.
kinto.account_create_principals = system.Everyone
# Set the session time to live in seconds
kinto.account_cache_ttl_seconds = 30

kinto.experimental_permissions_endpoint = true
kinto.experimental_collection_schema_validation = true

kinto.includes = kinto.plugins.default_bucket
                 kinto.plugins.admin
                 kinto.plugins.accounts


# FIND A WAY TO CONFIGURE IT VIA HEROKU.
kinto.http_scheme = https
# kinto.http_host = kinto.services.mozilla.com

# [uwsgi]
# wsgi-file = app.wsgi
# enable-threads = true
# socket = /var/run/uwsgi/kinto.sock
# chmod-socket = 666
# processes =  3
# master = true
# module = kinto
# harakiri = 120
# uid = kinto
# gid = kinto
# virtualenv = .venv
# lazy = true
# lazy-apps = true
# single-interpreter = true
# buffer-size = 65535
# post-buffering = 65535


#
# Logging configuration
#

# kinto.logging_renderer = kinto.core.logs.ClassicLogRenderer

[loggers]
keys = root, kinto

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_kinto]
level = DEBUG
handlers =
qualname = kinto

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
